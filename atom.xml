<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-23T13:10:13.969Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Aloys</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Freertos任务创建</title>
    <link href="http://yoursite.com/2018/12/23/Freertos-%E4%BB%BB%E5%8A%A1%E5%88%9B%E5%BB%BA/"/>
    <id>http://yoursite.com/2018/12/23/Freertos-任务创建/</id>
    <published>2018-12-23T12:59:15.000Z</published>
    <updated>2018-12-23T13:10:13.969Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Freertos 任务创建相关API函数列表</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>xTaskCreate()</td><td>动态的方法创建一个任务</td></tr><tr><td>xTaskCreateStatic()</td><td>静态的方法创建一个任务</td></tr><tr><td>xTaskCreateRestricted()</td><td>使用 MPU 进行限制的任务，相关内存使用动态内存分配</td></tr><tr><td>vTaskDelete()</td><td>删除一个任务</td></tr></tbody></table><a id="more"></a><ul><li><strong>xTaskCreate()</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BaseType_t <span class="title">xTaskCreate</span><span class="params">(TaskFunction_t pxTaskCode,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">const</span> <span class="keyword">char</span> * <span class="keyword">const</span> pcName,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">const</span> <span class="keyword">uint16_t</span> usStackDepth,</span></span></span><br><span class="line"><span class="function"><span class="params">                        <span class="keyword">void</span> * <span class="keyword">const</span> pvParameters,</span></span></span><br><span class="line"><span class="function"><span class="params">                        UBaseType_t uxPriority,</span></span></span><br><span class="line"><span class="function"><span class="params">                        TaskHandle_t * <span class="keyword">const</span> pxCreatedTask )</span></span></span><br></pre></td></tr></table></figure><p>参数说明：<br>pxTaskCode:        任务名称<br>pcName:        任务别名，用于追踪和调试 ，名字长度需小于<code>configMAX_TASK_NAME_LEN</code><br>usStackDepth:    任务堆栈大小 ,空闲任务的任务堆栈大小为<code>configMINIMAL_STACK_SIZE</code><br>pvParameters:    任务入口参数，没有时设置为NULL即可<br>uxPriority:        任务优先级，范围 0~ configMAX_PRIORITIES-1<br>pxCreatedTask:    任务句柄 ，任务创建成功以后会返回此任务的任务句柄 ，不需要时设置为NULL即可</p><ul><li><strong>xTaskCreateStatic()</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">TaskHandle_t <span class="title">xTaskCreateStatic</span><span class="params">(TaskFunction_t pxTaskCode,</span></span></span><br><span class="line"><span class="function"><span class="params">                               <span class="keyword">const</span> <span class="keyword">char</span> * <span class="keyword">const</span> pcName,</span></span></span><br><span class="line"><span class="function"><span class="params">                               <span class="keyword">const</span> <span class="keyword">uint32_t</span> ulStackDepth,</span></span></span><br><span class="line"><span class="function"><span class="params">                               <span class="keyword">void</span> * <span class="keyword">const</span> pvParameters,</span></span></span><br><span class="line"><span class="function"><span class="params">                               UBaseType_t uxPriority,</span></span></span><br><span class="line"><span class="function"><span class="params">                               StackType_t * <span class="keyword">const</span> puxStackBuffer,</span></span></span><br><span class="line"><span class="function"><span class="params">                               StaticTask_t * <span class="keyword">const</span> pxTaskBuffer )</span></span></span><br></pre></td></tr></table></figure><p> 参数说明：<br>pxTaskCode：    任务名称<br>pcName：        任务别名，用于追踪和调试 ，名字长度需小于<code>configMAX_TASK_NAME_LEN</code><br>usStackDepth：    任务堆栈大小 ,任务堆栈由用户给出，一般是个数组，此参数就是这个数组的大小<br>pvParameters：    任务入口参数，没有时设置为NULL即可<br>uxPriority：        任务优先级，范围 0~ configMAX_PRIORITIES-1<br>puxStackBuffer：    任务堆栈，一般为数组，数组类型要为 StackType_t 类型<br>pxTaskBuffer：    任务控制块</p><ul><li><p><strong>xTaskCreateRestricted()</strong></p><p>函数要求所使用的 MCU 有 MPU(内存保护单元)，用此函数创建的任务会受到 MPU 的保护。 其他的功能和函数 xTaxkCreate()一致。</p></li><li><p><strong>vTaskDelete()</strong></p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">vTaskDelete</span><span class="params">( TaskHandle_t xTaskToDelete )</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Freertos 任务创建相关API函数列表&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;xTaskCreate()&lt;/td&gt;
&lt;td&gt;动态的方法创建一个任务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xTaskCreateStatic()&lt;/td&gt;
&lt;td&gt;静态的方法创建一个任务&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;xTaskCreateRestricted()&lt;/td&gt;
&lt;td&gt;使用 MPU 进行限制的任务，相关内存使用动态内存分配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vTaskDelete()&lt;/td&gt;
&lt;td&gt;删除一个任务&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
    
      <category term="Freertos" scheme="http://yoursite.com/tags/Freertos/"/>
    
  </entry>
  
  <entry>
    <title>C/C++代码规范</title>
    <link href="http://yoursite.com/2018/12/11/C++%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/12/11/C++代码规范总结/</id>
    <published>2018-12-11T14:05:37.834Z</published>
    <updated>2018-12-17T15:39:35.952Z</updated>
    
    <content type="html"><![CDATA[<ul><li>函数设计中，如果参数是指针，且仅作输入使用，则参数类型应该使用const进行修饰，以防止该指针在函数体内被意外修改。</li><li><p>关于引用的一些规则：</p><a id="more"></a><blockquote><ol><li>引用被创建的同时必须被初始化（指针则可以在任何时候被初始化）</li><li>不能有 NULL 引用，引用必须与合法的存储单元关联（指针则可以是NULL）</li><li>一旦引用被初始化，就不能改变引用的关系（指针则可以随时改变所指的对象）</li></ol></blockquote></li><li><p>内存分配的三种方式:</p><blockquote><ol><li>从静态存储区域分配。内存在程序编译的时候就已经分配好，这块内存在程序的整个运行期间都存在。例如全局变量，static 变量。</li><li>在栈上创建。在执行函数时，函数内局部变量的存储单元都可以在栈上创建，函数执行结束时这些存储单元自动被释放。栈内存分配运算内置于处理器的指令集中，效率很高，但是分配的内存容量有限</li><li>从堆上分配，亦称动态内存分配。程序在运行的时候用 malloc 或 new申请任意多少的内存，程序员自己负责在何时用 free 或 delete 释放内存。动态内存的生存期由我们决定，使用非常灵活，但问题也最多。</li></ol></blockquote></li><li><p>使用内存之前记得检查指针为否为NULL，如果指针 p 是函数的参数，<br>那么在函数的入口处用 assert(p!=NULL)进行检查。如果是用 malloc 或 new 来申请内存，应该用 if(p==NULL) 或 if(p!=NULL)进行防错处理 。</p></li><li>用 free 或 delete 释放了内存之后，立即将指针设置为NULL，防止产生“野指针” </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;函数设计中，如果参数是指针，且仅作输入使用，则参数类型应该使用const进行修饰，以防止该指针在函数体内被意外修改。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关于引用的一些规则：&lt;/p&gt;
    
    </summary>
    
    
      <category term="C/C++" scheme="http://yoursite.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/12/08/hello-world/"/>
    <id>http://yoursite.com/2018/12/08/hello-world/</id>
    <published>2018-12-08T08:10:18.365Z</published>
    <updated>2018-12-09T07:19:42.073Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-file"><a href="#Generate-static-file" class="headerlink" title="Generate static file"></a>Generate static file</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
